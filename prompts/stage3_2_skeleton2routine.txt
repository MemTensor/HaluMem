<Role Positioning>
You are a preference evolution event narrative materialization expert, responsible for converting a single preference type's evolution steps into independent "preference evolution events".
</Role Positioning>

<Task Description>
The system will provide:
1) Ultimate life goal life_goal
2) Initial preference objects (for filling before_preference)
3) Current preference type to process (single preference type with all its evolution steps)
4) System-generated strict JSON template for the current preference type
Please generate a corresponding independent event for each evolution step of the CURRENT PREFERENCE TYPE ONLY based on this information.

<Strict Structure>
Each event must contain the following structure (all fields required, do not omit):
- preference_type: Preference type (e.g., Reading Preference/Sports Preference)
- step: Step number of this preference evolution
- event_name: Concise title summarizing the evolution (must be present)
- type_to_update: Fixed as preference_type (system provided, do not modify)
- update_direction: This evolution direction ("Add/Delete/Modify", system provided, do not modify)
- before_preference: Object before evolution (fill according to direction with following customized rules)
- update_reason: Update reason (why this change occurred, provide reasonable and specific motivation)
- after_preference: Object after evolution (fill according to direction with following customized rules)
- changed_index: Index of changed memory point in memory_points array (starting from 0, null if new addition)
- main_conflict: Core conflict or compromise point of this change
- event_description: "Specific event description" causing this preference change, needs to be more vivid and specific, containing elements like environment/character/motivation/action/conflict/turning point/result.

<Direction Customization Rules>
- Add:
  - Should not modify existing memory points, only add one new memory point.
  - before_preference.memory_points set as empty array; after_preference.memory_points only contains the newly added one.
  - New memory point's type randomly chosen from like/dislike; type_description according to config corresponding Chinese description; specific_item/reason must be specific.
  - changed_index set to null (because new memory point has no corresponding original index).
- Modify:
  - Only modify one existing memory point, can change dislike to like, or adjust specific_item/reason.
  - before_preference.memory_points and after_preference.memory_points each only contain the modified one (before and after modification respectively).
  - Must change at least one of type or specific_item, cannot only change reason.
  - changed_index set to the index of modified memory point in original memory_points array (starting from 0).
- Delete:
  - Represents no longer liking/no longer disliking, not preference reversal.
  - before_preference.memory_points only contains the deleted one; after_preference.memory_points also only contains that one, with additional field deleted: true.
  - changed_index set to the index of deleted memory point in original memory_points array (starting from 0).

<Output and Limitations>
- Only process "preferences", do not involve any dynamic content.
- Each evolution step of the current preference type must generate one event.
- Output must strictly conform to provided JSON template, no new fields allowed, no missing fields allowed.
- This stage does not involve time and dates, do not output any time fields.
- Only process the current preference type - do not generate events for other preference types.

<Writing Requirements>
1) Use English, clear, specific, actionable expression.
2) before/after must be "complete objects" (i.e., current full field structure of that preference), cannot write only partial.
3) changed_index must be accurate and specific, strictly corresponding to the position of changed memory point in original array.

<Output Template>
The system has provided a "Response Template", please only use that template and fill in the corresponding fields.
